version: '3.8'

services:
  # Main Next.js application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: finsmartai-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:/app/data/custom.db
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-nextauth-secret-here
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - finsmartai-network

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: finsmartai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - finsmartai-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: finsmartai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - finsmartai-network
    profiles:
      - proxy

  # Database backup service
  backup:
    build:
      context: .
      dockerfile: Dockerfile.backup
    container_name: finsmartai-backup
    environment:
      - DATABASE_URL=file:/app/data/custom.db
      - BACKUP_DIR=/app/backups
      - S3_BUCKET=your-s3-bucket
      - AWS_ACCESS_KEY_ID=your-access-key
      - AWS_SECRET_ACCESS_KEY=your-secret-key
    volumes:
      - ./data:/app/data
      - ./backups:/app/backups
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - finsmartai-network
    profiles:
      - backup

  # Monitoring service
  monitoring:
    image: prom/prometheus:latest
    container_name: finsmartai-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - finsmartai-network
    profiles:
      - monitoring

  # Grafana for monitoring dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: finsmartai-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - monitoring
    restart: unless-stopped
    networks:
      - finsmartai-network
    profiles:
      - monitoring

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  finsmartai-network:
    driver: bridge